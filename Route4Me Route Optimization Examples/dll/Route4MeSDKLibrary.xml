<?xml version="1.0"?>
<doc>
<assembly>
<name>
Route4MeSDKLibrary
</name>
</assembly>
<members>
<member name="M:Route4MeSDKLibrary.Route4MeSDK.R4MeUtils.ReadObject``1(System.IO.Stream)">
	<summary>
 Reads JSON object for a stream
 Any DataContractJsonSerializer can be thrown
 </summary>
</member><member name="M:Route4MeSDKLibrary.Route4MeSDK.R4MeUtils.ReadString(System.IO.Stream)">
	<summary>
 Reads a stream to a string
 </summary>
</member><member name="M:Route4MeSDKLibrary.Route4MeSDK.R4MeUtils.SerializeObjectToJson(System.Object)">
	<summary>
 Serialized an object to a string as JSON
 Any DataContractJsonSerializer can be thrown
 </summary>
</member><member name="M:Route4MeSDKLibrary.Route4MeSDK.R4MeUtils.Description(System.Enum)">
	<summary>
 Returns the DescriptionAttribute of a enum value
 </summary>
</member><member name="M:Route4MeSDKLibrary.Route4MeSDK.R4MeUtils.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
	<summary>
 IEnumerable extension method, performs 'action' for each IEnumerable item
 source value can be null
 </summary>
</member><member name="M:Route4MeSDKLibrary.Route4MeSDK.R4MeUtils.ConvertToUnixTimestamp(System.DateTime)">
	<summary>
 Convert DateTime to Unix epoch time
 </summary>
</member><member name="M:Route4MeSDKLibrary.Route4MeSDK.R4MeUtils.ConvertFromUnixTimestamp(System.Int64)">
	<summary>
 Convert DateTime from Unix epoch time
 </summary>
</member><member name="T:Route4MeSDKLibrary.Route4MeSDK.R4MeUtils">
	<summary>
 Route4Me C# SDK helper methods
 </summary>
</member><member name="T:Route4MeSDKLibrary.Route4MeSDK.R4MEInfrastructureSettings">
	<summary>
 Route4Me infrastructure settings
 Api version 4 hosts constants
 </summary>
</member><member name="P:Route4MeSDKLibrary.Route4MeSDK.QueryTypes.AvoidanceZoneQuerry.DeviceID">
	<summary>
 Device Id
 </summary>
</member><member name="P:Route4MeSDKLibrary.Route4MeSDK.QueryTypes.AvoidanceZoneQuerry.TerritoryId">
	<summary>
 Territory Id
 </summary>
</member><member name="T:Route4MeSDKLibrary.Route4MeSDK.QueryTypes.AvoidanceZoneQuerry">
	<summary>
 Avoidance zone querry
 </summary>
</member><member name="T:Route4MeSDKLibrary.Route4MeSDK.QueryTypes.GPSParameters">
	<summary>
 Helper class, for setting GPS data
 Used to create the suitable query string
 See example in Route4MeExamples.SetGPSPosition()
 </summary>
</member><member name="P:Route4MeSDKLibrary.Route4MeSDK.QueryTypes.AvoidanceZoneParameters.TerritoryId">
	<summary>
 Territory Id
 </summary>
</member><member name="P:Route4MeSDKLibrary.Route4MeSDK.QueryTypes.AvoidanceZoneParameters.TerritoryName">
	<summary>
 Territory name
 </summary>
</member><member name="P:Route4MeSDKLibrary.Route4MeSDK.QueryTypes.AvoidanceZoneParameters.TerritoryColor">
	<summary>
 Territory color
 </summary>
</member><member name="P:Route4MeSDKLibrary.Route4MeSDK.QueryTypes.AvoidanceZoneParameters.MemberId">
	<summary>
 Member Id
 </summary>
</member><member name="P:Route4MeSDKLibrary.Route4MeSDK.QueryTypes.AvoidanceZoneParameters.Territory">
	<summary>
 Territory parameters
 </summary>
</member><member name="T:Route4MeSDKLibrary.Route4MeSDK.QueryTypes.AvoidanceZoneParameters">
	<summary>
 Avoidance zone parameters
 </summary>
</member><member name="P:Route4MeSDKLibrary.Route4MeSDK.QueryTypes.HttpQueryMemberAttribute.Name">
	<summary>
 The serialized argument name, if specifed overrides the property name
 </summary>
</member><member name="P:Route4MeSDKLibrary.Route4MeSDK.QueryTypes.HttpQueryMemberAttribute.EmitDefaultValue">
	<summary>
 Specifies whether to emit the property value, if its value is a default value
 </summary>
</member><member name="P:Route4MeSDKLibrary.Route4MeSDK.QueryTypes.HttpQueryMemberAttribute.DefaultValue">
	<summary>
 Specifies the default value, that is used when emiting the property value
 If not specified null is used as a default value
 </summary>
</member><member name="T:Route4MeSDKLibrary.Route4MeSDK.DataTypes.ErrorResponse">
	<summary>
 Errors data-structure
 </summary>
</member><member name="T:Route4MeSDKLibrary.Route4MeSDK.DataTypes.TerritoryType">
	<summary>
 Territory type (circle, rectangle, polygon)
 </summary>
</member><member name="T:Route4MeSDKLibrary.Route4MeSDK.DataTypes.DataObject">
	<summary>
 Main data object data-structure
 See https://www.assembla.com/spaces/route4me_api/wiki/Optimization_Problem_V4
 </summary>
</member><member name="P:Route4MeSDKLibrary.Route4MeSDK.DataTypes.Territory.Type">
	<summary>
 Territory type (circle, rectangle, polygon)
 </summary>
</member><member name="P:Route4MeSDKLibrary.Route4MeSDK.DataTypes.Territory.Data">
	<summary>
 Territory figure data
 </summary>
</member><member name="T:Route4MeSDKLibrary.Route4MeSDK.DataTypes.Territory">
	<summary>
 Territory parameters
 </summary>
</member><member name="P:Route4MeSDKLibrary.Route4MeSDK.DataTypes.AvoidanceZone.TerritoryId">
	<summary>
 Avoidance zone id
</summary>
</member><member name="P:Route4MeSDKLibrary.Route4MeSDK.DataTypes.AvoidanceZone.TerritoryName">
	<summary>
 Territory name
</summary>
</member><member name="P:Route4MeSDKLibrary.Route4MeSDK.DataTypes.AvoidanceZone.TerritoryColor">
	<summary>
 Territory color 
</summary>
</member><member name="P:Route4MeSDKLibrary.Route4MeSDK.DataTypes.AvoidanceZone.MemberId">
	<summary>
 Member Id
</summary>
</member><member name="P:Route4MeSDKLibrary.Route4MeSDK.DataTypes.AvoidanceZone.Territory">
	<summary>
 Territory parameters
</summary>
</member><member name="T:Route4MeSDKLibrary.Route4MeSDK.DataTypes.AvoidanceZone">
	<summary>
 Avoidance Zone
 </summary>
</member><member name="T:Route4MeSDKLibrary.Route4MeSDK.Route4MeManager.DataObjectOptimizations">
	<summary>
	</summary>
</member><member name="M:Route4MeSDKLibrary.Route4MeSDK.Route4MeManager.AddAvoidanceZone(Route4MeSDKLibrary.Route4MeSDK.QueryTypes.AvoidanceZoneParameters,System.String@)">
	<summary>
 Create avoidance zone
 </summary>
	<param name="avoidanceZoneParameters"> Parameters for request </param>
	<param name="errorString"> out: Error as string </param>
	<returns> Avoidance zone Object </returns>
</member><member name="M:Route4MeSDKLibrary.Route4MeSDK.Route4MeManager.GetAvoidanceZones(Route4MeSDKLibrary.Route4MeSDK.QueryTypes.AvoidanceZoneQuerry,System.String@)">
	<summary>
 Get avoidance zones
 </summary>
	<param name="avoidanceZoneQuerry"> Parameters for request </param>
	<param name="errorString"> out: Error as string </param>
	<returns> Avoidance zone Object list </returns>
</member><member name="M:Route4MeSDKLibrary.Route4MeSDK.Route4MeManager.GetAvoidanceZone(Route4MeSDKLibrary.Route4MeSDK.QueryTypes.AvoidanceZoneQuerry,System.String@)">
	<summary>
 Get avoidance zone by parameters (territory id, device id)
 </summary>
	<param name="avoidanceZoneQuerry"> Parameters for request </param>
	<param name="errorString"> out: Error as string </param>
	<returns> Avoidance zone Object </returns>
</member><member name="M:Route4MeSDKLibrary.Route4MeSDK.Route4MeManager.UpdateAvoidanceZone(Route4MeSDKLibrary.Route4MeSDK.QueryTypes.AvoidanceZoneParameters,System.String@)">
	<summary>
 Update avoidance zone (by territory id, device id)
 </summary>
	<param name="avoidanceZoneParameters"> Parameters for request </param>
	<param name="errorString"> out: Error as string </param>
	<returns> Avoidance zone Object </returns>
</member><member name="M:Route4MeSDKLibrary.Route4MeSDK.Route4MeManager.DeleteAvoidanceZone(Route4MeSDKLibrary.Route4MeSDK.QueryTypes.AvoidanceZoneQuerry,System.String@)">
	<summary>
 Delete avoidance zone (by territory id, device id)
 </summary>
	<param name="avoidanceZoneQuerry"> Parameters for request </param>
	<param name="errorString"> out: Error as string </param>
	<returns> Result status true/false </returns>
</member><member name="T:Route4MeSDKLibrary.Route4MeSDK.Route4MeManager">
	<summary>
 This class encapsulates the Route4Me REST API
 1. Create an instance of Route4MeManager with the api_key
 1. Shortcut methods: Use shortcuts methods (for example Route4MeManager.GetOptimization()) to access the most popular functionality.
    See examples Route4MeExamples.GetOptimization(), Route4MeExamples.SingleDriverRoundTrip()
 2. Generic methods: Use generic methods (for example Route4MeManager.GetJsonObjectFromAPI() or Route4MeManager.GetStringResponseFromAPI())
    to access any availaible functionality.
    See examples Route4MeExamples.GenericExample(), Route4MeExamples.SingleDriverRoundTripGeneric()
 </summary>
</member><member name="T:Route4MeSDKLibrary.Route4MeSDK.QueryTypes.GenericParameters">
	<summary>
 Helper class, for easy REST query parameters string generation
 1. Use GenericParameters.Serialize() to generate the query string
 2. Use GenericParameters.ParametersCollection for adding query parameters
 3. Inherit this class, to create usable parameters holders
    Add an attribute [HttpQueryMemberAttribute] on each property for serializing it automatically
 4. Modify ConvertBooleansToInteger.GenericParameters to serialize bool and bool? as "0" and "1"
 Important: You have to add here all derived classes, that are serealized as json as a KnownType
 </summary>
</member><member name="P:Route4MeSDKLibrary.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:Route4MeSDKLibrary.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:Route4MeSDKLibrary.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
</members>
</doc>